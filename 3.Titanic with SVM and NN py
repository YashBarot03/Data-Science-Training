import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import load_boston
from sklearn import svm
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
from sklearn.neural_network import MLPClassifier

df = pd.read_csv("C:/Users/JAY MATAJI/OneDrive/Desktop/Datascience intern/Titanic dataset.csv")
print(df)

#bos = load_boston
sc = svm.SVC()
nn = MLPClassifier()

# print(df.head(4))
# print(df.describe())

x = df.drop('PassengerId', axis=1)
x = x.drop('Survived', axis=1)
x = x.drop('Name', axis=1)
x = x.drop('Ticket', axis=1)
x = x.drop('Cabin', axis=1)
x = x.drop('Embarked', axis=1)
x = x.drop('Parch', axis=1)
x = x.drop('Sex', axis=1)

y = df['Survived']

x['Age'].fillna((x['Age'].mean()), inplace=True)
x['Fare'].fillna((x['Fare'].mean()), inplace=True)
# print(x.info())
# print(y.info())

print(x)
# print

x_train, x_test, y_train, y_test = train_test_split(
    x, y, random_state=0, test_size=0.2)

reg_train = sc.fit(x_train, y_train)
reg_train1 = nn.fit(x_train, y_train)
reg_pred = sc.predict(x_test)
reg_pred1 = nn.predict(x_test)

print('Mean Squared Error(SVM)=', mean_squared_error(y_test, reg_pred))
print('Mean Squared Error(NN)=', mean_squared_error(y_test, reg_pred1))

###        ANS      ###
# "C:\Program Files\Python39\python.exe" "C:/Users/JAY MATAJI/PycharmProjects/Datascience1/Titanic.py"
#      PassengerId  Survived  Pclass  ...      Fare Cabin  Embarked
# 0            892         0       3  ...    7.8292   NaN         Q
# 1            893         1       3  ...    7.0000   NaN         S
# 2            894         0       2  ...    9.6875   NaN         Q
# 3            895         0       3  ...    8.6625   NaN         S
# 4            896         1       3  ...   12.2875   NaN         S
# ..           ...       ...     ...  ...       ...   ...       ...
# 413         1305         0       3  ...    8.0500   NaN         S
# 414         1306         1       1  ...  108.9000  C105         C
# 415         1307         0       3  ...    7.2500   NaN         S
# 416         1308         0       3  ...    8.0500   NaN         S
# 417         1309         0       3  ...   22.3583   NaN         C
#
# [418 rows x 12 columns]
#      Pclass       Age  SibSp      Fare
# 0         3  34.50000      0    7.8292
# 1         3  47.00000      1    7.0000
# 2         2  62.00000      0    9.6875
# 3         3  27.00000      0    8.6625
# 4         3  22.00000      1   12.2875
# ..      ...       ...    ...       ...
# 413       3  30.27259      0    8.0500
# 414       1  39.00000      0  108.9000
# 415       3  38.50000      0    7.2500
# 416       3  30.27259      0    8.0500
# 417       3  30.27259      1   22.3583
#
# [418 rows x 4 columns]
# Mean Squared Error(SVM)= 0.42857142857142855
# Mean Squared Error(NN)= 0.34523809523809523
#
# Process finished with exit code 0
